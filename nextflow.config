// nextflow.config
// first draft based on previous work from binf 528

// defining parameters
params {
    // input_dir is passed from command line (--input_dir)
    outdir = "./results"
    publish_mode = 'copy'
    aws_region = 'us-east-2'  // default region, can be overridden by --aws_region
}

// default resource use
process {
    cpus = 2
    memory = '4.GB'
    time = '2.h'
    
    // enable caching for resume functionality
    cache = 'deep'
    
    // specialized resource use for individual processes
    withName: 'FASTQC' {
        cpus = 2
        memory = '4.GB'
    }
    
    withName: 'FASTP' {
        cpus = 4
        memory = '8.GB'
    }
    
    withName: 'MULTIQC' {
        cpus = 1
        memory = '2.GB'
    }
    
    withName: 'BWA_MEM2_INDEX' {
        cpus = 4
        memory = '8.GB'
        time = '2.h'
    }
    
    withName: 'BWA_MEM2' {
        cpus = 8
        memory = '16.GB'
        time = '4.h'
    }
    
    withName: 'SAMTOOLS_STATS' {
        cpus = 2
        memory = '4.GB'
    }
    
    withName: 'SAMTOOLS_INDEX' {
        cpus = 1
        memory = '2.GB'
        time = '30.m'
    }
    
    withName: 'QUALIMAP' {
        cpus = 4
        memory = '8.GB'
        time = '2.h'
    }
    
    withName: 'PICARD_MARKDUPLICATES' {
        cpus = 4
        memory = '12.GB'
        time = '3.h'
    }
    
    withName: 'PICARD_COLLECTINSERTSIZEMETRICS' {
        cpus = 2
        memory = '8.GB'
        time = '1.h'
    }
    
    withName: 'MOSDEPTH' {
        cpus = 4
        memory = '6.GB'
        time = '2.h'
    }
    
    withName: 'GATK_BASERECALIBRATOR' {
        cpus = 4
        memory = '16.GB'
        time = '4.h'
    }
    
    withName: 'GATK_APPLYBQSR' {
        cpus = 4
        memory = '16.GB'
        time = '4.h'
    }
}

// all execution profiles for different deployments
profiles {
    
    // GATK test data profile for small-scale testing
    gatk_test {
        params {
            input_dir = "s3://gatk-test-data/wgs_fastq/NA12878_20k"
            reference = "s3://broad-references/hg19/v0/Homo_sapiens_assembly19.fasta"
            known_sites = "s3://broad-references/hg19/v0/dbsnp_138.b37.vcf.gz,s3://broad-references/hg19/v0/Mills_and_1000G_gold_standard.indels.b37.vcf.gz"
        }
        
        // reduced resources for small test data
        process {
            cpus = 1
            memory = '2.GB'
            time = '30.m'
            
            withName: 'BWA_MEM2_INDEX' {
                cpus = 2
                memory = '4.GB'
                time = '1.h'
            }
            
            withName: 'BWA_MEM2' {
                cpus = 4
                memory = '8.GB'
                time = '1.h'
            }
            
            withName: 'GATK_BASERECALIBRATOR' {
                cpus = 2
                memory = '8.GB'
                time = '1.h'
            }
            
            withName: 'GATK_APPLYBQSR' {
                cpus = 2
                memory = '8.GB'
                time = '1.h'
            }
        }
    }
    
    // hg19/b37 reference configuration
    hg19 {
        params {
            reference = "s3://broad-references/hg19/v0/Homo_sapiens_assembly19.fasta"
            known_sites = "s3://broad-references/hg19/v0/dbsnp_138.b37.vcf.gz,s3://broad-references/hg19/v0/Mills_and_1000G_gold_standard.indels.b37.vcf.gz"
        }
    }
    
    // hg38/GRCh38 reference configuration  
    hg38 {
        params {
            reference = "s3://broad-references/hg38/v0/Homo_sapiens_assembly38.fasta"
            known_sites = "s3://broad-references/hg38/v0/Homo_sapiens_assembly38.dbsnp138.vcf,s3://broad-references/hg38/v0/Mills_and_1000G_gold_standard.indels.hg38.vcf.gz,s3://broad-references/hg38/v0/Homo_sapiens_assembly38.known_indels.vcf.gz"
        }
    }
    
    // custom profile - requires all parameters to be specified explicitly
    custom {
        // no parameter defaults - user must provide all via command line
    }
    
    // for simple conda environments
    conda {
        conda.enabled = true
    }

    // for docker environments
    docker {
        docker.enabled = true
        docker.runOptions = '-u $(id -u):$(id -g)'
    }

    // process for aws; uses aws batch
    aws {
        // enable resume across different runs
        resume = true
        
        process {
            executor = 'awsbatch'
            queue = 'nextflow-compute-queue'
            // default container
            container = 'quay.io/biocontainers/fastqc:0.12.1--hdfd78af_0'
            
            // process-specific containers
            withName: 'FASTQC*' {
                container = 'quay.io/biocontainers/fastqc:0.12.1--hdfd78af_0'
            }
            
            withName: 'FASTP' {
                container = 'quay.io/biocontainers/fastp:0.23.4--h5f740d0_0'
            }
            
            withName: 'MULTIQC' {
                container = 'quay.io/biocontainers/multiqc:1.19--pyhdfd78af_0'
            }
            
            withName: 'BWA_MEM2_INDEX' {
                container = 'quay.io/biocontainers/bwa-mem2:2.2.1--he513fc3_0'
            }
            
            withName: 'BWA_MEM2' {
                container = 'quay.io/biocontainers/mulled-v2-e5d375990341c5aef3c9aff74f96f66f65375ef6:2cdf6bf1e92acbeb9b2834b1c58754167173a410-0'
            }
            
            withName: 'SAMTOOLS_STATS' {
                container = 'quay.io/biocontainers/samtools:1.17--h00cdaf9_0'
            }
            
            withName: 'SAMTOOLS_INDEX' {
                container = 'quay.io/biocontainers/samtools:1.17--h00cdaf9_0'
            }
            
            withName: 'QUALIMAP' {
                container = 'quay.io/biocontainers/qualimap:2.2.2d--1'
            }
            
            withName: 'PICARD_MARKDUPLICATES' {
                container = 'quay.io/biocontainers/picard:2.27.4--hdfd78af_0'
            }
            
            withName: 'PICARD_COLLECTINSERTSIZEMETRICS' {
                container = 'quay.io/biocontainers/picard:2.27.4--hdfd78af_0'
            }
            
            withName: 'MOSDEPTH' {
                container = 'quay.io/biocontainers/mosdepth:0.3.8--hd4290b6_0'
            }
            
            withName: 'GATK_BASERECALIBRATOR' {
                container = 'quay.io/biocontainers/gatk4:4.4.0.0--py36hdfd78af_0'
            }
            
            withName: 'GATK_APPLYBQSR' {
                container = 'quay.io/biocontainers/gatk4:4.4.0.0--py36hdfd78af_0'
            }
        }

        // AWS configuration with debugging
        aws {
            region = params.aws_region ?: 'us-east-2'
            batch {
                maxParallelTransfers = 4
                maxTransferAttempts = 3
                debug = true
            }
            client {
                maxConnections = 20
                connectionTimeout = 300000
                uploadStorageClass = 'INTELLIGENT_TIERING'
                storageEncryption = 'AES256'
                debug = true
            }
        }
        
        // S3 work directory
        workDir = 's3://bp-wgs-covaris-nextflow-workdir/work'
        
        // store execution reports and timeline in S3 for persistence
        timeline {
            enabled = true
            file = 's3://bp-wgs-covaris-nextflow-workdir/reports/timeline.html'
        }
        report {
            enabled = true
            file = 's3://bp-wgs-covaris-nextflow-workdir/reports/report.html'
        }
        trace {
            enabled = true
            file = 's3://bp-wgs-covaris-nextflow-workdir/reports/trace.txt'
        }

        // enable fusion for S3 streaming
        fusion {
            enabled = true
        }
        wave {
            enabled = true
        }
    }
}

// pipeline metadata
manifest {
    name = 'wgs_covaris_ashg'
    description = 'NGS Quality Control & Analysis Pipeline'
    version = '1.0.0'
    nextflowVersion = '>=22.04.0'
}
